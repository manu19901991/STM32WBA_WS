{"version":3,"sources":["components/CodeBlock.js","components/GithubContext.js","components/MarkdownView.js","components/DocumentView.js","components/PresentationView.js","components/SelectView.js","components/DrawerMenuItem.js","components/SelectionDialog.js","components/DrawerMenu.js","components/MainScreen.js","App.js","serviceWorker.js","index.js"],"names":["CodeBlock","props","state","timeoutCnt","copyToClipBoard","bind","copyTimeout","e","this","enqueueSnackbar","variant","el","document","createElement","value","children","body","appendChild","select","execCommand","removeChild","setState","setTimeout","buttonText","buttonColor","code_content","buttonShow","undefined","className","includes","showLineNumbers","filteredLanguageName","split","pop","Button","size","style","marginBottom","color","onClick","length","Divider","language","atomOneLight","wrapLongLines","codeTagProps","fontFamily","Component","withSnackbar","GithubContext","React","createContext","MarkdownView","options","overrides","h1","component","Typography","gutterBottom","classes","h2","h3","h4","paragraph","p","a","Link","li","code","pre","img","alt","src","context","mdInfo","mdPath","replace","title","boxShadow","maxWidth","height","ainfo","Alert","severity","asuccess","awarning","aerror","contextType","fabStyle","position","bottom","theme","spacing","right","DocumentView","scrollTop","window","scrollTo","top","behavior","mdChapters","separatedMdContent","map","mdPart","key","routerLocation","Box","justify","padding","Fab","sx","KeyboardArrowUp","fabStyles","fabR","fabC","fabL","fabLL","PresentationView","console","log","search","shift","mdChapterSize","slideIndex","slide","slideToShow","reroute","enter","nextSlide","previousSlide","firstSlide","onExited","onEnter","previousIndex","nextSlideIdex","routeIndex","routesHandling","exact","path","match","render","parseInt","params","id","push","to","url","from","mdToShowIn","Fade","in","unmountOnExit","mountOnEnter","Tooltip","Replay","KeyboardArrowLeft","KeyboardArrowRight","SelectView","selectedView","separateHeader","mdContent","routeProps","drawerMenuItemStyles","Folder","fontWeight","File","DrawerMenuItem","searchItem","item","type","find","searchFolder","hasOwnProperty","fileName","file","item_inside","expand","itemNested","depth","paddingLeft","completeItem","subFolder","selectCb","name","ListItem","button","ListItemText","inset","primary","disableTypography","ExpandLess","ExpandMore","Collapse","timeout","List","disablePadding","selectedItem","toLink","pathASrray","join","selected","SelectionDialog","open","tagSelected","handleClose","tag","tags","linkPath","githubName","githubRepository","Dialog","onClose","DialogTitle","DialogContent","ListItemButton","ListItemIcon","AltRoute","tagButtonStyle","flexGrow","DrawerMenu","tagDialog","createRef","closeDrawer","openTagDialog","drawerChange","current","openDialog","gitTagButton","classesToUse","listToShow","menuItems","index","listCore","pageOptions","allowTagSelect","startIcon","LocalOffer","gitTag","Drawer","drawer","isDrawerOpen","anchor","Toolbar","IconButton","edge","ChevronLeft","tagList","ref","drawerWidth","mainScreenStyles","root","display","width","flexShrink","drawerPaper","appBarClose","marginLeft","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarOpen","easeOut","enteringScreen","content","contentShift","nested","MainScreen","mdFilesContent","mdSelected","menuStructure","mdfilesToLoadArr","mdGithubLoc","githubPage","selectTag","itemSelectedCb","drawerOpenClose","handleDrawerOpen","fetchRestOfFiles","fetchGithubTags","process","prevProps","githubRepo","fetch","then","response","json","text","tagNames","tagJson","filesToLoad","fileToFetchWithContent","headers","jsonData","requests","filesToLoadArr","preparedContent","mdFile","Promise","all","allowMenu","githubLoc","itemName","isOpen","showDrawer","showMd","appBarStyle","contentStyle","iconMenu","githubButton","mdFileToShow","possibleRoute","mdFileToPath","Provider","mdFileContent","Menu","mdFileSource","element","location","pathname","hrefAddr","target","href","GitHub","AppBar","maxSnack","createTheme","typography","useNextVariants","palette","blue","secondary","pink","App","routeMainScreen","basename","ThemeProvider","CssBaseline","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.72432feb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Button, Divider } from '@mui/material';\r\nimport SyntaxHighlighter from 'react-syntax-highlighter';\r\nimport { atomOneLight } from 'react-syntax-highlighter/dist/esm/styles/hljs';\r\n\r\nimport { withSnackbar } from 'notistack';\r\n\r\n// import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\n// import { prism } from 'react-syntax-highlighter/dist/esm/styles/prism';\r\nclass CodeBlock extends Component {\r\n  // function CodeBlock({ children, ...props }) {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { timeoutCnt: 0 };\r\n    this.copyToClipBoard = this.copyToClipBoard.bind(this);\r\n    this.copyTimeout = this.copyTimeout.bind(this);\r\n  }\r\n\r\n  copyToClipBoard(e) {\r\n    this.props.enqueueSnackbar('Code is now in your clipboard', { variant: 'info' });\r\n    const el = document.createElement('textarea');\r\n    el.value = this.props.children;\r\n    document.body.appendChild(el);\r\n    el.select();\r\n\r\n    document.execCommand('copy');\r\n    document.body.removeChild(el);\r\n    let timeoutCnt = this.state.timeoutCnt;\r\n    timeoutCnt++;\r\n    this.setState({ timeoutCnt: timeoutCnt });\r\n    setTimeout(this.copyTimeout, 5000);\r\n  }\r\n\r\n  copyTimeout() {\r\n    let timeoutCnt = this.state.timeoutCnt;\r\n    if (timeoutCnt > 0) {\r\n      timeoutCnt--;\r\n      this.setState({ timeoutCnt: timeoutCnt++ });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let buttonShow = [];\r\n    let buttonText;\r\n    let buttonColor;\r\n    if (this.state.timeoutCnt > 0) {\r\n      buttonText = '!!   Copied   !!';\r\n      buttonColor = 'primary';\r\n    } else {\r\n      buttonText = 'Copy code';\r\n      buttonColor = 'primary';\r\n    }\r\n    // const { classes } = props;\r\n    /*copy the clipboard */\r\n\r\n    let code_content;\r\n\r\n    if ((this.props.className !== undefined) && this.props.className.includes('lang-')) {\r\n      let filteredLanguageName = this.props.className.split('lang-').pop()\r\n      if (filteredLanguageName.includes('-nc')) {\r\n        filteredLanguageName = filteredLanguageName.split('-nc')[0];\r\n      } else {\r\n        buttonShow = (\r\n          <div>\r\n            <Button variant=\"contained\" size=\"small\" style={{ marginBottom: 12 }} color={buttonColor} onClick={this.copyToClipBoard}>\r\n              {buttonText}\r\n            </Button>\r\n          </div>);\r\n      }\r\n      let codeLines = this.props.children.split(/\\r\\n|\\r|\\n/).length;\r\n      let showLineNumbers;\r\n      if (codeLines === 1) {\r\n        showLineNumbers = false;\r\n      } else {\r\n        showLineNumbers = true;\r\n      }\r\n      code_content = (\r\n        <div>\r\n          <Divider />\r\n          <div>\r\n            <SyntaxHighlighter language={filteredLanguageName} style={atomOneLight} showLineNumbers={showLineNumbers} wrapLongLines={true} codeTagProps={{ style: { fontFamily: 'inherit' } }}>\r\n              {/* <SyntaxHighlighter language=\"cpp\" style={prism} showLineNumbers=\"true\" codeTagProps={{style: {fontFamily: 'inherit'} }}> */}\r\n              {this.props.children}\r\n            </SyntaxHighlighter>\r\n          </div>\r\n          {buttonShow}\r\n          <Divider />\r\n        </div>\r\n      );\r\n    } else {\r\n      code_content = (\r\n        <i>\r\n          {/* // <Typography variant=\"i\"> */}\r\n\r\n          <code>\r\n            {this.props.children}\r\n          </code>\r\n          {/* // </Typography> */}\r\n        </i>\r\n      );\r\n    }\r\n\r\n    return code_content;\r\n  }\r\n}\r\n\r\nexport default withSnackbar(CodeBlock);\r\n","import React from 'react';\r\n\r\nexport const GithubContext = React.createContext('');","import React, { Component, Fragment } from 'react';\r\nimport ReactMarkdown from 'markdown-to-jsx';\r\n\r\nimport { Typography, Link, Alert } from '@mui/material';\r\n\r\nimport CodeBlock from './CodeBlock';\r\n\r\nimport { GithubContext } from './GithubContext.js';\r\nexport class MarkdownView extends Component {\r\n  // constructor(props) {\r\n  //   super(props);\r\n  //   //CodeBlock.bind(this.props);\r\n  // }\r\n\r\n  render() {\r\n    // const { classes } = this.props;\r\n    const options = {\r\n      overrides: {\r\n        h1: { component: ({ children, ...props }) => (<Typography gutterBottom variant=\"h4\"> {children}  </Typography>), props: { classes: this.props.classes } },\r\n        h2: { component: ({ children, ...props }) => (<Typography gutterBottom variant=\"h6\" > {children}</Typography>), props: { classes: this.props.classes } },\r\n        h3: { component: ({ children, ...props }) => (<Typography gutterBottom variant=\"subtitle1\"> {children}</Typography>), props: { classes: this.props.classes } },\r\n        h4: { component: ({ children, ...props }) => (<Typography gutterBottom variant=\"caption\" paragraph > {children}</Typography>), props: { classes: this.props.classes } },\r\n        p: { component: ({ children, ...props }) => (<Typography paragraph >{children} </Typography>), props: { classes: this.props.classes } },\r\n        a: { component: Link },\r\n        li: {\r\n          component: ({ children, ...props }) => {\r\n            return (\r\n              <li >\r\n                <Typography component=\"span\" >{children}</Typography>\r\n              </li>\r\n            );\r\n          }\r\n          , props: { classes: this.props.classes }\r\n        },\r\n        code: {\r\n          component: CodeBlock\r\n        },\r\n        pre: { component: ({ children, ...props }) => (<Fragment>{children}</Fragment>) },\r\n        img: {\r\n          component: ({ children, ...props }) => {\r\n            return (\r\n              <Fragment>\r\n                <img alt={props.alt} src={this.context + this.props.mdInfo.mdPath + \"/img/\" + props.src.replace('./img/', '')} title={props.title} style={{ boxShadow: '0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19)', maxWidth: '100%', height: 'auto' }}>\r\n                </img>\r\n                <br />\r\n              </Fragment>\r\n            )\r\n\r\n          }\r\n        },\r\n        ainfo: {\r\n          component: ({ children, ...props }) => {\r\n            return (\r\n              <Alert variant=\"filled\" severity=\"info\">\r\n                {children}\r\n              </Alert>\r\n            );\r\n          }\r\n        },\r\n        asuccess: {\r\n          component: ({ children, ...props }) => {\r\n            return (\r\n              <Alert variant=\"filled\" severity=\"success\">\r\n                {children}\r\n              </Alert>\r\n            );\r\n          }\r\n        },\r\n        awarning: {\r\n          component: ({ children, ...props }) => {\r\n            return (\r\n              <Alert variant=\"filled\" severity=\"warning\">\r\n                {children}\r\n              </Alert>\r\n            );\r\n          }\r\n        },\r\n        aerror: {\r\n          component: ({ children, ...props }) => {\r\n            return (\r\n              <Alert variant=\"filled\" severity=\"error\">\r\n                {children}\r\n              </Alert>\r\n            );\r\n          }\r\n        }\r\n      },\r\n    };\r\n    return (\r\n      <Fragment>\r\n        <ReactMarkdown children={this.props.children} options={options} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nMarkdownView.propTypes = {\r\n};\r\n\r\nMarkdownView.contextType = GithubContext;\r\n\r\nexport default MarkdownView;","import React, { Component } from 'react';\r\nimport MarkdownView from './MarkdownView';\r\nimport { Box, Fab } from '@mui/material';\r\nimport { KeyboardArrowUp } from '@mui/icons-material';\r\n\r\nconst fabStyle = {\r\n    position: 'fixed',\r\n    bottom: theme => theme.spacing(2),\r\n    right: theme => theme.spacing(2),\r\n};\r\nexport class DocumentView extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     //CodeBlock.bind(this.props);\r\n    // }\r\n\r\n    scrollTop = () => {\r\n        window.scrollTo({ top: 0, behavior: 'smooth' });\r\n    };\r\n\r\n    render() {\r\n        const mdChapterRegex = /(^#\\s.*\\r\\n\\r\\n)/g;\r\n        let mdChapters = this.props.mdChapters;\r\n        mdChapters = mdChapters.split(mdChapterRegex);\r\n        let separatedMdContent = mdChapters.map((mdPart, key) => (<MarkdownView children={mdPart} enqueueSnackbar={this.props.enqueueSnackbar} mdInfo={this.props.mdInfo} key={key} routerLocation={this.props.routerLocation} />));\r\n        return (\r\n            <Box justify=\"flex-start\" spacing={0} style={{ padding: 24 }}>\r\n                {separatedMdContent}\r\n                <Fab aria-label={'Add'} sx={fabStyle} color={'primary'} onClick={this.scrollTop}>\r\n                    <KeyboardArrowUp />\r\n                </Fab>\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n// DocumentView.propTypes = {\r\n// };\r\n\r\nexport default DocumentView;\r\n","import React, { Component, Fragment } from 'react';\r\nimport MarkdownView from './MarkdownView';\r\nimport { Box, Fab, Fade, Tooltip } from '@mui/material';\r\nimport { KeyboardArrowRight, KeyboardArrowLeft, Replay } from '@mui/icons-material';\r\n\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\n// import {  Link } from \"react-router-dom\";\r\n// import PropTypes from 'prop-types';\r\n\r\n\r\nconst fabStyles = {\r\n    fabR: {\r\n        position: 'fixed',\r\n        bottom: (theme) => theme.spacing(2),\r\n        right: (theme) => theme.spacing(2)\r\n    },\r\n    fabC: {\r\n        position: 'fixed',\r\n        bottom: (theme) => theme.spacing(10),\r\n        right: (theme) => theme.spacing(2)\r\n    },\r\n    fabL: {\r\n        position: 'fixed',\r\n        bottom: (theme) => theme.spacing(2),\r\n        right: (theme) => theme.spacing(10)\r\n    },\r\n    fabLL: {\r\n        position: 'fixed',\r\n        bottom: (theme) => theme.spacing(2),\r\n        right: (theme) => theme.spacing(18),\r\n    }\r\n};\r\nexport class PresentationView extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const mdChapterRegex = /^(?=#\\s.*[\\r\\n\\r\\n|\\n\\n])/gm;\r\n        //const mdChapterRegex = /(?=#\\s.*\\r\\n\\r\\n)/g;\r\n        const emptyLine = /^[\\r\\n\\r\\n|\\n\\n]/;\r\n        //const emptyLine = /^\\r\\n\\r\\n/;\r\n        let mdChapters = this.props.mdChapters;\r\n        console.log(mdChapters);\r\n        mdChapters = mdChapters.split(mdChapterRegex);\r\n        console.log(mdChapters);\r\n        if (mdChapters[0].search(emptyLine) >= 0) {\r\n            mdChapters.shift();\r\n        }\r\n        const mdChapterSize = mdChapters.length;\r\n\r\n        this.state = {\r\n            slideIndex: 0,\r\n            mdChapters: mdChapters,\r\n            mdChapterSize: mdChapterSize,\r\n            slide: true,\r\n            slideToShow: 0,\r\n            reroute: false,\r\n            enter: true\r\n        };\r\n        this.nextSlide = this.nextSlide.bind(this);\r\n        this.previousSlide = this.previousSlide.bind(this);\r\n        this.firstSlide = this.firstSlide.bind(this);\r\n        this.onExited = this.onExited.bind(this);\r\n        this.onEnter = this.onEnter.bind(this);\r\n    }\r\n\r\n    firstSlide() {\r\n        let previousIndex = this.state.slideIndex;\r\n        this.setState({\r\n            previousIndex: previousIndex,\r\n            slideIndex: 0,\r\n            slide: false\r\n        });\r\n    }\r\n\r\n    nextSlide() {\r\n        let nextSlideIdex = this.state.slideIndex + 1;\r\n        if (nextSlideIdex >= this.state.mdChapterSize) {\r\n            console.log('çondition fail');\r\n            return;\r\n        }\r\n        this.setState({\r\n            slideIndex: nextSlideIdex,\r\n            slide: false\r\n        });\r\n    }\r\n\r\n    previousSlide() {\r\n        let previousSlide = this.state.slideIndex - 1;\r\n        if (previousSlide < 0) {\r\n            previousSlide = 0;\r\n        }\r\n        this.setState({\r\n            slideIndex: previousSlide,\r\n            slide: false\r\n        });\r\n    }\r\n    onExited() {\r\n        this.setState({\r\n            slideToShow: this.state.slideIndex,\r\n            slide: true,\r\n            reroute: true\r\n        });\r\n    }\r\n\r\n    onEnter(routeIndex) {\r\n        this.setState({ slideIndex: routeIndex, slideToShow: routeIndex, enter: false });\r\n    }\r\n\r\n    render() {\r\n        // const { classes } = this.props;\r\n        /*check first line */\r\n        //let separatedMdContent = this.state.mdChapters.map(mdPart => (<MarkdownView children={mdPart} enqueueSnackbar={this.props.enqueueSnackbar} mdInfo={this.props.mdInfo} />));\r\n        const routesHandling = (<Switch>\r\n            <Route exact path={`${this.props.match.path}/:id`} render={({ match }) => {\r\n                let routeIndex = parseInt(match.params.id);\r\n                if (this.state.reroute) {\r\n                    return (<Redirect push to={`${this.props.match.url}/${this.state.slideIndex}`} />);\r\n                } else {\r\n                    if (this.state.enter) {\r\n                        setTimeout(this.onEnter, 0, routeIndex);\r\n                    }\r\n                }\r\n                return (<Fragment></Fragment>);\r\n            }} />\r\n            <Redirect exact from={`${this.props.match.url}`} to={`${this.props.match.url}/0`} />\r\n        </Switch>);\r\n        const mdToShowIn = (\r\n            <Fragment>\r\n                <Fade in={this.state.slide} unmountOnExit={true} mountOnEnter={true} onExited={this.onExited}>\r\n                    {/*div is here to make fade work. fade is not accept custome component as child */}\r\n                    <div>\r\n                        <MarkdownView children={this.state.mdChapters[this.state.slideToShow]} mdInfo={this.props.mdInfo} />\r\n                    </div>\r\n                </Fade>\r\n            </Fragment>\r\n        );\r\n        return (\r\n            <Box justify=\"flex-start\" spacing={0} style={{ padding: 24 }}>\r\n                {routesHandling}\r\n                {mdToShowIn}\r\n                <Tooltip title=\"First slide\" aria-label=\"First slide\">\r\n                    {/* <Fab aria-label={'First slide'} className={classes.fabLL} color={'primary'} onClick={this.firstSlide}> */}\r\n                    <Fab aria-label={'First slide'} sx={fabStyles.fabLL} color={'primary'} onClick={this.firstSlide}>\r\n                        {/* <Fab aria-label={'First slide'} className={classes.fabLL} color={'primary'} component={Link} to={`${this.props.match.url}/0`}> */}\r\n                        <Replay />\r\n                    </Fab>\r\n                </Tooltip>\r\n                <Tooltip title=\"Previous slide\" aria-label=\"Previous slide\">\r\n                    {/* <Fab aria-label={'Previous slide'} className={classes.fabL} color={'primary'} onClick={this.previousSlide}> */}\r\n                    <Fab aria-label={'Previous slide'} sx={fabStyles.fabL} color={'primary'} onClick={this.previousSlide}>\r\n                        <KeyboardArrowLeft />\r\n                    </Fab>\r\n                </Tooltip>\r\n                {/* <Fab aria-label={'Slide'} className={classes.fabC} variant=\"extended\"> */}\r\n                <Fab aria-label={'Slide'} sx={fabStyles.fabC} variant=\"extended\">\r\n                    {`  ${this.state.slideIndex + 1} / ${this.state.mdChapters.length}  `}\r\n                </Fab>\r\n                <Tooltip title=\"Next slide\" aria-label=\"Next slide\">\r\n                    {/* <Fab aria-label={'Next slide'} className={classes.fabR} color={'primary'} onClick={this.nextSlide}> */}\r\n                    <Fab aria-label={'Next slide'} sx={fabStyles.fabR} color={'primary'} onClick={this.nextSlide}>\r\n                        <KeyboardArrowRight />\r\n                    </Fab>\r\n                </Tooltip>\r\n\r\n            </Box>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PresentationView;","import React, { Component, Fragment } from 'react';\r\nimport DocumentView from './DocumentView';\r\nimport PresentationView from './PresentationView';\r\n// import PropTypes from 'prop-types';\r\nimport { Route } from \"react-router-dom\";\r\n\r\nexport class SelectView extends Component {\r\n    render() {\r\n        const separateHeader = /^----!(\\r\\n|\\n)Presentation(\\r\\n|\\n)----!/;\r\n        /*find presentation*/\r\n        let mdChapters = this.props.mdInfo.mdContent;\r\n        let selectedView;\r\n        if (mdChapters.search(separateHeader) >= 0) {\r\n            /* presenatation mode */\r\n            console.log('presenation mode');\r\n            mdChapters = mdChapters.split(separateHeader).pop();\r\n            selectedView = (\r\n                <Route to={`${this.props.match.path}`} render={(routeProps) => (\r\n                    <PresentationView mdChapters={mdChapters} mdInfo={this.props.mdInfo} {...routeProps} />\r\n                )} />\r\n            );\r\n        } else {\r\n            console.log('document mode');\r\n            selectedView = (<DocumentView mdChapters={mdChapters} mdInfo={this.props.mdInfo} />);\r\n        }\r\n        return (\r\n            <Fragment>\r\n                {selectedView}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\nSelectView.propTypes = {\r\n};\r\n\r\nexport default SelectView;\r\n","import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ListItem, ListItemText, Collapse, List } from '@mui/material';\r\nimport { ExpandLess } from '@mui/icons-material';\r\nimport { ExpandMore } from '@mui/icons-material';\r\nimport { Link, Route } from \"react-router-dom\";\r\n\r\nconst drawerMenuItemStyles = {\r\n  Folder: {\r\n    color: '#002052',\r\n    fontWeight: 'bold'\r\n  },\r\n  File: {\r\n    color: '#002052',\r\n    fontWeight: '500'\r\n  }\r\n};\r\n\r\nexport class DrawerMenuItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // this.searchFolder = this.searchFolder.bind(this);\r\n    // this.searchItem = this.searchItem.bind(this);\r\n    function searchFolder(item) {\r\n      return item.children.find((item) => searchItem(item));\r\n    }\r\n    function searchItem(item) {\r\n      if (item.type === 'Folder') {\r\n        return searchFolder(item);\r\n      } else {\r\n        // if (props.location.pathname.includes(`${props.match.url}/${item.file}`)) {\r\n        if (props.match.params.hasOwnProperty('fileName') && (props.match.params.fileName === item.file)) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    let item_inside = searchItem(this.props.item);\r\n    if (item_inside === undefined) {\r\n      item_inside = false;\r\n    } else {\r\n      item_inside = true;\r\n    }\r\n    this.state = { expand: item_inside };\r\n  }\r\n\r\n\r\n  render() {\r\n    // const { theme, classes } = this.props;\r\n    let item = this.props.item;\r\n    // let shortName = item.name.replace(/\\s/g, '');\r\n    let itemNested = {};\r\n    if (this.props.depth > 0) {\r\n      // console.log(this.props.classesToUse);\r\n      // itemNested = this.props.classesToUse.nested;\r\n      let leftPadding = 32 * this.props.depth;\r\n      itemNested = { paddingLeft: leftPadding };\r\n    }\r\n    let completeItem = {};\r\n    if (item.type === 'Folder') {\r\n      /*folder */\r\n      let subFolder = item.children.map((value) => (\r\n        <Route key={value.name} to={`${this.props.match.path}`} render={(routeProps) => (\r\n          <DrawerMenuItem key={value.name} item={value} depth={this.props.depth + 1} selectCb={this.props.selectCb} {...routeProps} />\r\n        )} />\r\n      ));\r\n      let folderItem = (\r\n        <Fragment>\r\n          <ListItem button style={itemNested} onClick={(e) => this.setState({ expand: !this.state.expand })} >\r\n            <ListItemText inset primary={item.name} disableTypography sx={drawerMenuItemStyles.Folder} />\r\n            {this.state.expand ? <ExpandLess /> : <ExpandMore />}\r\n          </ListItem>\r\n          <Collapse in={this.state.expand} timeout=\"auto\" unmountOnExit>\r\n            <List component=\"div\" disablePadding>\r\n              {subFolder}\r\n            </List>\r\n          </Collapse>\r\n        </Fragment>\r\n      );\r\n      completeItem = folderItem;\r\n    } else if (item.type === 'File') {\r\n      /*file */\r\n      let selectedItem = false;\r\n      if (this.props.match.params.hasOwnProperty('fileName') && (this.props.match.params.fileName === item.file)) {\r\n        selectedItem = true;\r\n      }\r\n      let toLink = '';\r\n      if (this.props.match.path.search(':fileName') > 0) {\r\n        let pathASrray = this.props.match.url.split('/');\r\n        pathASrray.pop();\r\n        //console.log(pathASrray);\r\n        toLink = pathASrray.join('/');\r\n      } else {\r\n        toLink = this.props.match.url;\r\n      }\r\n      toLink = toLink + `/${item.file}`;\r\n      let fileItem = (\r\n        // <<<<<<< HEAD\r\n        //         <ListItem button selected={selectedItem} style={itemNested} onClick={(e) => this.props.selectCb(item.name)} component={Link} to={`${this.props.match.url}/${item.file}`}>\r\n        //           <ListItemText disableTypography inset primary={item.name} sx={drawerMenuItemStyles.File} />\r\n        // =======\r\n        <ListItem button selected={selectedItem} style={itemNested} onClick={(e) => this.props.selectCb(item.name)} component={Link} to={toLink}>\r\n          <ListItemText disableTypography inset primary={item.name} sx={drawerMenuItemStyles.File} />\r\n        </ListItem>\r\n      );\r\n      completeItem = fileItem;\r\n    } else {\r\n      // console.log('Not defined item')\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        {completeItem}\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\nDrawerMenuItem.propTypes = {\r\n  // classes: PropTypes.array.isRequired,\r\n  selectCb: PropTypes.func.isRequired,\r\n  depth: PropTypes.number.isRequired,\r\n  item: PropTypes.object.isRequired,\r\n  match: PropTypes.object.isRequired\r\n};\r\n\r\nexport default DrawerMenuItem;","import React, { Component } from 'react';\r\n\r\n// import Button from '@material-ui/core/Button';\r\nimport { ListItemButton, List, ListItemIcon, ListItemText, Dialog, DialogContent, DialogTitle } from '@mui/material';\r\n\r\nimport { AltRoute } from '@mui/icons-material';\r\n\r\nimport { Link } from \"react-router-dom\";\r\nexport class SelectionDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { open: false };\r\n        this.tagSelected = this.tagSelected.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n    }\r\n\r\n    openDialog() {\r\n        this.setState({ open: true });\r\n    }\r\n    /*tag is selected inform parent */\r\n    tagSelected(tag) {\r\n        //this.props.selectedTagCallback();\r\n        this.setState({ open: false });\r\n    }\r\n    handleClose() {\r\n        this.setState({ open: false });\r\n    }\r\n    render() {\r\n        let tags = this.props.tags;\r\n        /* assemble link */\r\n        let linkPath = '';\r\n        let fileName = '';\r\n        if (this.props.match.params.hasOwnProperty('githubName')) {\r\n            linkPath = linkPath + '/' + this.props.match.params.githubName;\r\n        }\r\n        if (this.props.match.params.hasOwnProperty('githubRepository')) {\r\n            linkPath = linkPath + '/' + this.props.match.params.githubRepository;\r\n        }\r\n        if (this.props.match.params.hasOwnProperty('fileName')) {\r\n            fileName = this.props.match.params.fileName;\r\n        }\r\n        return (\r\n            <Dialog onClose={this.handleClose} aria-labelledby=\"simple-dialog-title\" open={this.state.open}>\r\n                <DialogTitle id=\"simple-dialog-title\">Select page variant</DialogTitle>\r\n                <DialogContent>\r\n                    {/* <DialogContentText> */}\r\n                    Page allow multiple vatiants for its content. They can be linked to specific SW or HW version.\r\n                    {/* </DialogContentText> */}\r\n                </DialogContent>\r\n                <List>\r\n                    {tags.map((tag) => (\r\n                        <ListItemButton onClick={() => this.tagSelected(tag)} key={tag} component={Link} to={`${linkPath}/${tag}/${fileName}`}>\r\n                            <ListItemIcon >\r\n                                <AltRoute color=\"primary\" />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={tag} />\r\n                        </ListItemButton>\r\n                    ))}\r\n                </List>\r\n            </Dialog>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SelectionDialog;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Drawer, List, Divider, IconButton, Toolbar, Button } from '@mui/material';\r\nimport DrawerMenuItem from './DrawerMenuItem';\r\nimport { ChevronLeft } from '@mui/icons-material';\r\nimport { Route } from \"react-router-dom\";\r\n\r\nimport { LocalOffer } from '@mui/icons-material';\r\n\r\nimport SelectDialog from './SelectionDialog';\r\n// import {MenuIcon,InboxIcon,MailIcon} from '@mui/icons-material';\r\n\r\nconst tagButtonStyle = {\r\n  flexGrow: 1\r\n}\r\n\r\nexport class DrawerMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.tagDialog = React.createRef();\r\n\r\n    this.closeDrawer = this.closeDrawer.bind(this);\r\n    this.openTagDialog = this.openTagDialog.bind(this);\r\n  }\r\n  closeDrawer() {\r\n    this.props.drawerChange(false);\r\n  }\r\n  openTagDialog() {\r\n    this.tagDialog.current.openDialog();\r\n  }\r\n  render() {\r\n    const classes = this.props.classesToUse;\r\n    let listToShow = this.props.menuItems.map((value, index) => (\r\n      <Route key={index} to={`${this.props.match.path}`} render={(routeProps) => (\r\n        <DrawerMenuItem key={value.name} item={value} depth={0} selectCb={this.props.selectCb} classesToUse={this.props.classesToUse} {...routeProps} />\r\n      )} />\r\n    ));\r\n\r\n    let listCore = (\r\n      <List\r\n        component=\"nav\"\r\n      // subheader={<ListSubheader component=\"div\">Nested List Items</ListSubheader>}\r\n      >\r\n        {listToShow}\r\n      </List>\r\n    );\r\n    let gitTagButton;\r\n    if (this.props.pageOptions.allowTagSelect) {\r\n      gitTagButton = (\r\n        <Button color=\"inherit\" onClick={this.openTagDialog} startIcon={<LocalOffer />} sx={tagButtonStyle}>\r\n          {this.props.match.params.gitTag}\r\n        </Button>\r\n      );\r\n    }\r\n    return (\r\n      <Drawer\r\n        sx={\r\n          classes.drawer\r\n        }\r\n        variant=\"persistent\"\r\n        open={this.props.isDrawerOpen}\r\n        // classes={{\r\n        //   paper: classes.drawerPaper,\r\n        // }}\r\n        anchor=\"left\"\r\n      >\r\n        {/* <div className={classes.toolbar} /> */}\r\n        <Toolbar >\r\n\r\n          {/* <div className={classes.toolbar}> */}\r\n          <IconButton\r\n            onClick={this.closeDrawer}\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            edge=\"start\">\r\n            <ChevronLeft />\r\n          </IconButton>\r\n          {gitTagButton}\r\n          {/* </div> */}\r\n        </Toolbar>\r\n        <Divider />\r\n        {listCore}\r\n        <Route to={`${this.props.match.path}`} render={(routeProps) => (\r\n          <SelectDialog tags={this.props.tagList} ref={this.tagDialog} {...routeProps} />\r\n        )} />\r\n      </Drawer>\r\n    )\r\n  }\r\n}\r\nDrawerMenu.propTypes = {\r\n  selectCb: PropTypes.func.isRequired,\r\n  classesToUse: PropTypes.object.isRequired,\r\n  menuItems: PropTypes.array.isRequired,\r\n  isDrawerOpen: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default DrawerMenu;\r\n","import React, { Component } from 'react';\r\n\r\nimport SelectView from './SelectView';\r\nimport { AppBar, Toolbar, Typography, IconButton, Box, Button } from '@mui/material';\r\nimport { Menu, GitHub } from '@mui/icons-material';\r\n\r\nimport { SnackbarProvider } from 'notistack';\r\nimport DrawerMenu from './DrawerMenu';\r\n\r\nimport { Route } from \"react-router-dom\";\r\nimport { Fragment } from 'react';\r\nimport { GithubContext } from './GithubContext.js';\r\n\r\nimport { webVariant } from '../webConfig';\r\n\r\n\r\n\r\n// import { filesToLoadArr, menuStructure } from './markdownFilesToLoad';\r\n\r\n//develop\r\n// import mdDevelop from '%PUBLIC_URL%/markdown/CubeMXImport.md';\r\n\r\n// var mdContent =[];\r\nconst drawerWidth = 320;\r\n\r\nconst mainScreenStyles = {\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    '& .MuiDrawer-paper': {\r\n      width: drawerWidth\r\n    }\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  appBarClose: {\r\n    marginLeft: drawerWidth,\r\n    transition: (theme) => theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    })\r\n  },\r\n  appBarOpen: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: (theme) => theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  // content: {\r\n  //   flexGrow: 1,\r\n  //   padding: theme.spacing.unit * 3,\r\n  // },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: 24,\r\n    transition: (theme) => theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    // marginLeft: -drawerWidth,\r\n    marginLeft: 0,\r\n  },\r\n  contentShift: {\r\n    transition: (theme) => theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    // marginLeft: drawerWidth,\r\n    marginLeft: 0,\r\n  },\r\n  nested: {\r\n    paddingLeft: 32\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  }\r\n};\r\n\r\nclass MainScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mdFilesContent: [],\r\n      mdSelected: \"\",\r\n      isDrawerOpen: true,\r\n      menuStructure: [],\r\n      mdfilesToLoadArr: [],\r\n      mdGithubLoc: '',\r\n      githubPage: '',\r\n      selectTag: false,\r\n      tagList: [],\r\n      githubName: '',\r\n      githubRepository: '',\r\n      gitTag: '',\r\n      pageOptions: {\r\n        'allowMenu': true,\r\n        'allowTagSelect': true\r\n      }\r\n    };\r\n\r\n\r\n\r\n    this.itemSelectedCb = this.itemSelectedCb.bind(this);\r\n    this.drawerOpenClose = this.drawerOpenClose.bind(this);\r\n    this.handleDrawerOpen = this.handleDrawerOpen.bind(this);\r\n    this.fetchRestOfFiles = this.fetchRestOfFiles.bind(this);\r\n    this.fetchGithubTags = this.fetchGithubTags.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    switch (webVariant) {\r\n      case 'githubFetch':\r\n        fetch(process.env.PUBLIC_URL + '/github.json').then((response) => {\r\n          return response.json();\r\n        }).then((jsonData) => {\r\n          this.fetchRestOfFiles(jsonData.githubName, jsonData.githubRepository, this.props.match.params.gitTag);//fetch from location found in github.json in public folder\r\n        });\r\n        break;\r\n      case 'local':\r\n        console.log('!!local option currently not working!!')\r\n        this.fetchRestOfFiles(process.env.PUBLIC_URL);// fetch from public folder\r\n        break;\r\n      case 'addressFetch':\r\n        this.fetchRestOfFiles(this.props.match.params.githubName, this.props.match.params.githubRepository, this.props.match.params.gitTag);//fetch from location based on address parameters\r\n        break;\r\n      default:\r\n\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.match.params.gitTag !== prevProps.match.params.gitTag) {\r\n      switch (webVariant) {\r\n        case 'addressFetch':\r\n          this.fetchRestOfFiles(this.props.match.params.githubName, this.props.match.params.githubRepository, this.props.match.params.gitTag);//fetch from location based on address parameters\r\n          break;\r\n        case 'githubFetch':\r\n          fetch(process.env.PUBLIC_URL + '/github.json').then((response) => {\r\n            return response.json();\r\n          }).then((jsonData) => {\r\n            this.fetchRestOfFiles(jsonData.githubName, jsonData.githubRepository, this.props.match.params.gitTag);//fetch from location found in github.json in public folder\r\n          });\r\n          break;\r\n        case 'local':\r\n\r\n          break;\r\n        default:\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  fetchGithubTags(githubName, githubRepo) {\r\n    let githubPage = `https://api.github.com/repos/${githubName}/${githubRepo}/tags`;\r\n    fetch(githubPage).then((response) => {\r\n      return response.json();\r\n    }).then((text) => {\r\n      let tagNames = text.map(tagJson => tagJson.name);\r\n      this.setState({ tagList: tagNames });\r\n    });\r\n  }\r\n\r\n  fetchRestOfFiles(githubName, githubRepository, gitTag) {\r\n    let filesToLoad;\r\n    var mdFilesContent = [];\r\n    let fileToFetchWithContent = \"\";\r\n    switch (webVariant) {\r\n      case 'local':\r\n        fileToFetchWithContent = '.';\r\n        break;\r\n      default:\r\n        this.fetchGithubTags(githubName, githubRepository);\r\n        fileToFetchWithContent = `https://raw.githubusercontent.com/${githubName}/${githubRepository}/${gitTag}`;\r\n    }\r\n    fetch(fileToFetchWithContent + '/filesToLoad.json', {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      }\r\n    }).then((response) => {\r\n      return response.json();\r\n    }).then((jsonData) => {\r\n      document.title = jsonData.title;\r\n      filesToLoad = jsonData;\r\n    }).then(() => {\r\n      let requests = filesToLoad.filesToLoadArr.map(value => {\r\n        return fetch(fileToFetchWithContent + value.path + \"/\" + value.file).then((response) => response.text()).then((text) => {\r\n          let preparedContent = { name: value.name, mdContent: text, mdPath: value.path, mdFile: value.file }\r\n          mdFilesContent.push(preparedContent);\r\n        });\r\n      });\r\n      Promise.all(requests).then(() => {\r\n        let isDrawerOpen = true;\r\n\r\n        if (!(('options' in filesToLoad) && ('allowMenu' in filesToLoad.options))) {\r\n          filesToLoad.options = this.state.pageOptions;\r\n          console.log('Add options to yout filesToLoad file');\r\n        }\r\n        if (filesToLoad.options.allowMenu === false) {\r\n          isDrawerOpen = false;\r\n        }\r\n\r\n        this.setState({ githubName: githubName, githubRepository: githubRepository, gitTag: gitTag, mdFilesContent: mdFilesContent, menuStructure: filesToLoad.menuStructure, mdfilesToLoadArr: filesToLoad.filesToLoadArr, mdGithubLoc: filesToLoad.githubLoc, githubPage: fileToFetchWithContent, pageOptions: filesToLoad.options, isDrawerOpen: isDrawerOpen });\r\n      });\r\n    })\r\n  }\r\n\r\n\r\n  itemSelectedCb(itemName) {\r\n    this.setState({ mdSelected: itemName });\r\n  }\r\n  handleDrawerOpen() {\r\n    this.drawerOpenClose(true);\r\n  }\r\n  drawerOpenClose(isOpen) {\r\n    this.setState({ isDrawerOpen: isOpen });\r\n  }\r\n\r\n  render() {\r\n    // const { classes } = this.props;\r\n    /* md files */\r\n    let mdFileToShow = {};\r\n    let showDrawer;\r\n    let showMd;\r\n    let possibleRoute = '';\r\n    switch (webVariant) {\r\n      case 'addressFetch':\r\n        possibleRoute = '/:githubName/:githubRepository/:gitTag';\r\n        break;\r\n      case 'githubFetch':\r\n        possibleRoute = '/:gitTag';\r\n        break;\r\n      default:\r\n    }\r\n\r\n    if (this.state.mdFilesContent.length === 0) {\r\n      mdFileToShow.name = \"Loading\";\r\n      mdFileToShow.mdContent = \"\";\r\n      mdFileToShow.mdPath = \"\";\r\n    }\r\n    else if (this.state.mdFilesContent.length === 1) {\r\n      mdFileToShow = this.state.mdFilesContent[0];\r\n      let mdFileToPath = this.state.menuStructure[0];\r\n      showDrawer = (\r\n        <Route to={`${this.props.match.path}`} render={(routeProps) => (\r\n          <DrawerMenu classesToUse={mainScreenStyles} menuItems={this.state.menuStructure} selectCb={this.itemSelectedCb} isDrawerOpen={this.state.isDrawerOpen} drawerChange={this.drawerOpenClose} tagList={this.state.tagList} pageOptions={this.state.pageOptions} match={this.props.match} {...routeProps} />\r\n        )} />\r\n      );\r\n      showMd = (\r\n\r\n        <Route path={`${possibleRoute}/${mdFileToPath.file}`} render={(routeProps) => (\r\n          <GithubContext.Provider value={this.state.githubPage}>\r\n            <SelectView mdInfo={mdFileToShow} {...routeProps} />\r\n          </GithubContext.Provider>\r\n        )} />\r\n      );\r\n    } else {\r\n      showDrawer = (\r\n        <Route to={`${this.props.match.path}`} render={(routeProps) => (\r\n          <DrawerMenu classesToUse={mainScreenStyles} menuItems={this.state.menuStructure} selectCb={this.itemSelectedCb} isDrawerOpen={this.state.isDrawerOpen} drawerChange={this.drawerOpenClose} tagList={this.state.tagList} pageOptions={this.state.pageOptions} match={this.props.match} {...routeProps} />\r\n        )} />\r\n      );\r\n      mdFileToShow = this.state.mdFilesContent.find((mdFileContent) => (mdFileContent.name === this.state.mdSelected));\r\n      // let mdFileToPath = this.state.menuStructure.find((menuStructureContent) => (menuStructureContent.name === this.state.mdSelected));\r\n      showMd = this.state.mdFilesContent.map((mdFileContent, index) => {\r\n        return (<Route key={index} path={`${possibleRoute}/${mdFileContent.mdFile}`} render={(routeProps) => {\r\n          return (\r\n            <GithubContext.Provider value={this.state.githubPage}>\r\n              <SelectView mdInfo={mdFileContent} {...routeProps} />\r\n            </GithubContext.Provider>\r\n          );\r\n        }} />)\r\n      });\r\n      showMd.push(<Route key={'main screen not selected item'} exact path={`${this.props.match.path}`} render={(routeProps) => {\r\n        return (<Fragment></Fragment>);\r\n      }} />)\r\n      if (mdFileToShow === undefined) {\r\n        mdFileToShow = {};\r\n        mdFileToShow.name = \"\";\r\n        mdFileToShow.mdContent = \"\";\r\n        mdFileToShow.mdPath = \"\";\r\n      }\r\n\r\n      // console.log('Multiple files is not implemented yet');\r\n    }\r\n    let appBarStyle;\r\n    let contentStyle;\r\n    let iconMenu;\r\n    if (this.state.isDrawerOpen) {\r\n      appBarStyle = mainScreenStyles.appBarOpen;\r\n      contentStyle = mainScreenStyles.contentShift;\r\n    } else {\r\n      console.log(this)\r\n      if (('allowMenu' in this.state.pageOptions) && (this.state.pageOptions.allowMenu === true)) {\r\n        iconMenu = (<IconButton\r\n          color=\"inherit\"\r\n          aria-label=\"open drawer\"\r\n          onClick={this.handleDrawerOpen}\r\n          edge=\"start\"\r\n        // className={clsx(classes.menuButton, open && classes.hide)}\r\n        >\r\n          <Menu />\r\n        </IconButton>);\r\n      }\r\n      appBarStyle = mainScreenStyles.appBarClose;\r\n      showDrawer = null;\r\n      contentStyle = mainScreenStyles.content;\r\n    }\r\n    let githubButton;\r\n    /* create githup source page button */\r\n\r\n    let mdFileSource = this.state.mdfilesToLoadArr.find(element => {\r\n      return this.props.location.pathname.includes(element.file);\r\n    });\r\n    if (mdFileSource !== undefined) {\r\n      let hrefAddr = `https://github.com/${this.state.githubName}/${this.state.githubRepository}/blob/${this.state.gitTag}${mdFileSource.path}/${mdFileSource.file}`;\r\n      mdFileToShow.name = mdFileSource.name;\r\n      githubButton = (\r\n        <Button target=\"_blank\" href={hrefAddr} startIcon={<GitHub />} color=\"inherit\">\r\n          EDIT THIS PAGE\r\n        </Button>\r\n      );\r\n    }\r\n\r\n    /*drawers */\r\n    return (\r\n      <Box sx={mainScreenStyles.root}>\r\n        {showDrawer}\r\n\r\n        <AppBar position=\"fixed\" sx={appBarStyle}>\r\n          <Toolbar>\r\n            {iconMenu}\r\n            <Typography variant=\"h6\" color=\"inherit\" sx={mainScreenStyles.title}>\r\n              {mdFileToShow.name}\r\n            </Typography>\r\n            {githubButton}\r\n\r\n          </Toolbar>\r\n        </AppBar>\r\n        {/* <Box sx={contentStyle}>\r\n          <SnackbarProvider maxSnack={3}> */}\r\n        <Box className={contentStyle}>\r\n\r\n          <SnackbarProvider maxSnack={3}>\r\n            {/* <div className={classes.toolbar} key={'blank_div'} /> */}\r\n            <Toolbar />\r\n            {showMd}\r\n            <Toolbar />\r\n          </SnackbarProvider>\r\n        </Box>\r\n      </Box>\r\n    )\r\n  }\r\n}\r\n\r\nexport default (MainScreen);\r\n","import React from 'react';\r\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport { blue, pink } from '@mui/material/colors';\r\nimport MainScreen from './components/MainScreen';\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport 'typeface-roboto';\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\n\r\nimport { Fragment } from 'react';\r\n\r\nimport { webVariant } from './webConfig';\r\n\r\nconst theme = createTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n    fontFamily: [\r\n      'Roboto', 'Arial'\r\n    ].join(',')\r\n  },\r\n  palette: {\r\n    primary: blue,\r\n    secondary: pink,\r\n    text: {\r\n      primary: '#002052'\r\n    }\r\n  }\r\n});\r\n\r\n\r\n\r\nfunction App() {\r\n  let routeMainScreen;\r\n  switch (webVariant) {\r\n    case 'addressFetch':\r\n      routeMainScreen = (\r\n        <Fragment>\r\n          {/* <Route exact path=\"/:githubName/:githubRepository/\"> */}\r\n          <Route path=\"/:githubName/:githubRepository/\" exact render={(routeProps) => (\r\n            <Redirect to={`/${routeProps.match.params.githubName}/${routeProps.match.params.githubRepository}/master`} />\r\n          )\r\n          } />\r\n          {/* // </Route> */}\r\n          <Route path='/:githubName/:githubRepository/:gitTag' exact component={MainScreen} />\r\n          <Route path='/:githubName/:githubRepository/:gitTag/:fileName' component={MainScreen} />\r\n        </Fragment>\r\n      );\r\n      break;\r\n    case 'local':\r\n      routeMainScreen = (\r\n        <Fragment>\r\n          {/* <Redirect from='/' exact to='/show' /> */}\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/show\" />\r\n          </Route>\r\n          {/* <Route path='/:gitTag' exact component={MainScreen} /> */}\r\n          <Route path='/:fileName' component={MainScreen} />\r\n        </Fragment>\r\n      );\r\n      break;\r\n    default:\r\n      routeMainScreen = (\r\n        <Fragment>\r\n          {/* <Redirect from='/' exact to='/show' /> */}\r\n          <Route exact path=\"/\">\r\n            <Redirect to=\"/master\" />\r\n          </Route>\r\n          <Route path='/:gitTag' exact component={MainScreen} />\r\n          <Route path='/:gitTag/:fileName' component={MainScreen} />\r\n        </Fragment>\r\n      );\r\n  }\r\n  return (\r\n    <Router basename={process.env.PUBLIC_URL}>\r\n      <ThemeProvider\r\n        theme={theme}>\r\n        <CssBaseline />\r\n        <div className=\"App\">\r\n          <Switch>\r\n            {routeMainScreen}\r\n            {/* <Route path='/:githubName/:githubRepository' component={MainScreen} /> */}\r\n            {/* <Route path='/show' component={MainScreen} />\r\n            <Route path='/show' component={MainScreen} /> */}\r\n            {/* <Route path='/:gitTag' exact>\r\n              exact github path\r\n            </Route>\r\n            <Route path='/:gitTag/:fileName'>\r\n              exact github path with tag\r\n            </Route> */}\r\n\r\n            {/* <Route path='/:githubName/:githubRepository' exact>\r\n              exact github path\r\n            </Route>\r\n            <Route path='/:githubName/:githubRepository/:gitTag' exact>\r\n              exact github path with tag\r\n            </Route>\r\n            <Route path='/:githubName/:githubRepository/:gitTag/:content' exac>\r\n              exact github path with tag content\r\n            </Route> */}\r\n          </Switch>\r\n          {/* <MainScreen /> */}\r\n        </div>\r\n      </ThemeProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}